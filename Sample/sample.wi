

"include.wi"
"include/include.wi"
"include.h"
"<sysinclude.h>"

// decl
sys Sys
type Type
type longptr "typedef:long*"
type int
sys NSObject

// mt classes
RSubClassMT:RClassMT "RSubClassMT" "attribute" "fn:mt"
RClassMT<RProtocolMT> "RClassMT" "attribute" "fn:inherit"
<RSubProtocolMT:RProtocolMT> "RSubProtocolMT" "attribute"
<RProtocolMT> "RProtocolMT" "attribute"


// inherit
RSubClass:RClass "fn:inherit"
    int RSubClass,int
    -(void)RSubClass {RSubClass}
    -(void)fn {RSubClass}
RSubClass2:RClass<RProtocol> "fn:inherit"
    int RSubClass2,int
    -(void)RSubClass {RSubClass2}
    -(void)fn {RSubClass2}
RClass<RProtocol> "fn:inherit"
    int RClass,int
    -(void)RSubClass {RClass}
    -(void)fn {RClass}
RClass2<RProtocol,RSubProtocol> "fn:inherit"
    int RClass2,int
    -(void)RClass2 {RClass2}
    -(void)fn {RClass2}
RClassab<RProtocol,RProtocolb> "fn:inherit"
    int RClassab,int
    -(void)RClassab {RClassab}
    -(void)fn {RClassab}
RSubClassabnapnac:RClassabnapnac "fn:inherit"
    int RSubClassabnapnac,int
    -(void)RSubClassabnapnac {RSubClassabnapnac}
    -(void)fn {RSubClassabnapnac}
RClassabnapnac<RProtocol,RProtocolb,RProtocolnap> "nac" "fn:inherit"
    int RClassabnapnac,int
    -(void)RClassabnapnac {RClassabnapnac}
    -(void)fn {RClassabnapnac}
RClassabnap<RProtocol,RProtocolb,RProtocolnap> "fn:inherit"
    int RClassabnap,int
    -(void)RClassabnap {RClassabnap}
    -(void)fn {RClassabnap}
<RSubProtocol:RProtocol>
    int RSubProtocol,int
    -(void)RSubProtocol {RSubProtocol}
    -(void)fn {RSubProtocol}
<RProtocol>
    int RProtocol,int
    -(void)RProtocol {RProtocol}
    -(void)fn {RProtocol}
<RProtocolb>
    int RProtocolb,int
    -(void)RProtocolb {RProtocolb}
    -(void)fn {RProtocolb}
<RProtocolnap> "nap"
    int RProtocolnap,int
    -(void)RProtocolnap {RProtocolnap}
    -(void)fn {RProtocolnap}




// Category
Sys "fn:fns"
    int sys
    -(void)sysfn {@1 1}


// fns/vars/props

Fns "fn:fns"

    -(void)fn {
        @1 1 @2 2 @3 3 @100 100 @99 99 @98 98
    }
    -(void)fn2 {
        @1 1 @2 2 @3 3
    }
    -(void)fn2 {
        @100 100 @99 99 @98 98
    }
    -(void)fn:(int)i
    {
        @1 1 @2 2 @3 3 @100 100 @99 99 @98 98
    }
    -void cfn(int i) {@1 c}

SubFns:Fns "fn:fns"
    -(void)fn {
        @!1 1! @4 add4
    }
    -(void)fn2 {
        @!1 1! @4 add4
    }

Class

<Vars>
    int aVariableOfTypeIntInClass__JustWIClass___declInProtocol
    int classParamCparam

Vars "cparam=>Vars" "fn:vars"
    int zero=0,one=1,nil=nil (args)
    int readonlyi=def (readonly,args)
    int imaginaryi=def (imaginary,args)
    int atomici=def (atomic,args)
    int settergetteri=def (setter=setSG,getter=sg,args)
    int getteri_noivar={return(2);} (args)
    int setteri=
        -v{setteri=2;} (args)
    int setteri_noivar=
        -v{a.setteri_noivar} (args)
    int sgi_noivar=
        {return(2);}
        -v{a.sgi_noivar} (args)
    int sgi=
        {return(2);}
        -v{sgi=2;} (args)
    int sgi2=
        {return(sgi);}
        -v{a.sgi2} (args)
    int justivari (justivar,args)
    int ivari (ivar,args)
    int justivari_named (justivar=the_justivari_named,args)
    int ivari (ivar=the_ivari_named,args)

    int aVariableOfTypeIntInClass__JustWIClass__

VarsRetain:Vars "int=>Class" "fn:vars"
VarsRetain2:Vars "int=>Class*" "fn:vars"
VarsClassPtr:Vars "int=>Class**" "fn:vars"

VarsAssign:Vars "int=>Class" "args=>assign" "fn:vars"
VarsAssign2:Vars "int=>Class*" "args=>assign" "fn:vars"

VarsAtomic:Vars "args=>atomic" "fn:vars"
VarsRetainAtomic:Vars "int=>Class" "args=>atomic" "fn:vars"
VarsAssignAtomic:Vars "int=>Class" "args=>assign,atomic" "fn:vars"







