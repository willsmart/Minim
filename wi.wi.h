//WInterface autogenerated this file at 2012-12-11 18:50:31 +0000. HaND

#import <objc/runtime.h>









typedef unsigned char BYT;
typedef enum {stage_commitStarting=0,stage_willCommit,stage_commit,stage_didCommit,stage_commitFinished} CommitStage;
typedef unsigned int DWRD;
typedef id<NSCopying> kid;
typedef long long LL;
typedef unsigned long long ULL;
typedef unsigned short WRD;
@protocol Array;
@protocol BasicTester;
@protocol DebugRetain;
@protocol DerivedObject;
@protocol Dictionary;
@protocol LinkEndpoint;
@protocol LogObjectProtocol;
@protocol MutableArrayDelegate;
@protocol MutableDictionaryDelegate;
@protocol MutableSetDelegate;
@protocol Set;
@protocol TesterCounter;
@protocol ValueLinkEndpoint;
@protocol WeakArray;
@protocol WeakDictionary;
@protocol WeakSet;
@protocol MinimalMutableArray;
@protocol MinimalMutableDictionary;
@protocol MutableArrayIndexFollower;
@protocol MutableDictionaryKeyFollower;
@protocol MutableSet;
@protocol ObjectID;
@protocol Tester;
@protocol ArrayLinkEndpoint;
@protocol BaseObject;
@protocol DictionaryLinkEndpoint;
@protocol MutableArray;
@protocol MutableDictionary;
@protocol MutableSetMirrorTester;
@protocol SetLinkEndpoint;
@protocol TrackerMutableArray;
@protocol TrackerMutableSet;
@protocol MutableArrayMirrorTester;
@protocol MutableDictionaryMirrorTester;
@protocol TrackerMutableDictionary;
@class CollectionTestObject;
@class CollectionTestSubObject;
@class IndexToIndexMap;
@class IntCarrier;
@class ObjectRegistry;
@class Util;
@class AtomiclyMutableArray;
@class AtomiclyMutableDictionary;
@class AtomiclyMutableSet;
@class Endpoint1;
@class PointerKey;
@class WeakObject;
@class ArrayTester;
@class DictionaryTester;
@class MutableSet;
@class ObjectPointer;
@class SetTester;
@class WeakMutableSet;
@class EndpointA;
@class EndpointA_tracker;
@class EndpointD;
@class EndpointS;
@class EndpointS_tracker;
@class Model;
@class MutableArray;
@class MutableDictionary;
@class MutableSetMirrorTesterImpl;
@class TrackerMutableArray;
@class TrackerMutableSet;
@class WeakMutableArray;
@class WeakMutableDictionary;
@class WeakMutableSetMirrorTesterImpl;
@class EndpointD_tracker;
@class MutableArrayMirrorTesterImpl;
@class MutableDictionaryMirrorTesterImpl;
@class TrackerMutableDictionary;
@class WeakMutableArrayMirrorTesterImpl;
@class WeakMutableDictionaryMirrorTesterImpl;










extern NSMutableArray *singletons;
#define ADDSINGLETON(o) [(!singletons?singletons=[[NSMutableArray array] retain]:singletons) addObject:o]
void clearSingletons();




















#pragma mark -
#pragma mark Protocols:

@protocol Array 
@property (readonly) NSArray* __array;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(NSObject<Array>*)init;
-(NSObject<Array>*)initWithArray:(NSArray*)array;
-(NSObject<Array>*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(NSObject<Array>*)initWithCoder:(NSCoder*)coder;
-(NSObject<Array>*)initWithContentsOfFile:(NSString*)file;
-(NSObject<Array>*)initWithContentsOfURL:(NSURL*)url;
-(NSObject<Array>*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setValue:(id)value forKey:(NSString *)key;

@end









@protocol BasicTester 
@property (retain,nonatomic) NSMutableString* errs;
-(bool)passFail:(bool)pass format:(NSString*)format,...;

@end









@protocol DebugRetain 
@property  int __arc;
@property (readonly) NSString* __description;
@property  int __rc;
-(id)autorelease;
-(id)retain;
-(NSString*)__description;
-(void)dealloc;
-(void)release;

@end









@protocol DerivedObject 
@property (readonly) NSMutableDictionary* asNewDictionary;
-(NSMutableDictionary*)asNewDictionary;
-(void)addGraph:(NSMutableSet*)s;
-(void)setWithDictionary:(NSDictionary*)d;

@end









@protocol Dictionary 
@property (readonly) NSDictionary* __dictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(NSObject<Dictionary>*)init;
-(NSObject<Dictionary>*)initWithCoder:(NSCoder*)coder;
-(NSObject<Dictionary>*)initWithContentsOfFile:(NSString*)file;
-(NSObject<Dictionary>*)initWithContentsOfURL:(NSURL*)url;
-(NSObject<Dictionary>*)initWithDictionary:(NSDictionary*)dictionary;
-(NSObject<Dictionary>*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(NSObject<Dictionary>*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;

@end









@protocol LinkEndpoint 
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(bool)unacceptable:(id)obj;
-(NSObject<LinkEndpoint>*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;

@end









@protocol LogObjectProtocol 
@property (retain,nonatomic) NSMutableString* logDescription;
-(NSMutableString*) logDescriptionRecurseWithStack:(NSMutableSet*)stack;

@end









@protocol MutableArrayDelegate 
-(bool)shouldAddObject:(id)object;
-(void)allObjectsMoved;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol MutableDictionaryDelegate 
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol MutableSetDelegate 
-(bool)shouldAddObject:(id)object;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)willRemoveObject:(id)object;

@end


















@protocol Set 
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(NSObject<Set>*)init;
-(NSObject<Set>*)initWithArray:(NSArray*)array;
-(NSObject<Set>*)initWithCoder:(NSCoder*)coder;
-(NSObject<Set>*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSObject<Set>*)initWithSet:(NSSet*)set;
-(NSObject<Set>*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setValue:(id)value forKey:(NSString *)key;

@end









@protocol TesterCounter 
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;

@end



























@protocol ValueLinkEndpoint 
@property (assign) id value;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(id)value;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)setValue:(id)v;

@end









@protocol WeakArray 
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol WeakDictionary 
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol WeakSet 
-(void)didAddObject:(id)object;
-(void)willRemoveObject:(id)object;

@end









@protocol MinimalMutableArray <Array, MutableArrayDelegate>
@property (readonly) NSMutableArray* __mutableArray;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(NSObject<MinimalMutableArray>*)init;
-(NSObject<MinimalMutableArray>*)initWithArray:(NSArray*)array;
-(NSObject<MinimalMutableArray>*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(NSObject<MinimalMutableArray>*)initWithCapacity:(NSUInteger)numItems;
-(NSObject<MinimalMutableArray>*)initWithCoder:(NSCoder*)coder;
-(NSObject<MinimalMutableArray>*)initWithContentsOfFile:(NSString*)file;
-(NSObject<MinimalMutableArray>*)initWithContentsOfURL:(NSURL*)url;
-(NSObject<MinimalMutableArray>*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(void)addObject:(id)object;
-(void)dealloc;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)removeLastObject;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;

@end









@protocol MinimalMutableDictionary <Dictionary, MutableDictionaryDelegate>
@property (readonly) NSMutableDictionary* __mutableDictionary;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(NSObject<MinimalMutableDictionary>*)init;
-(NSObject<MinimalMutableDictionary>*)initWithCapacity:(NSUInteger)numItems;
-(NSObject<MinimalMutableDictionary>*)initWithCoder:(NSCoder*)coder;
-(NSObject<MinimalMutableDictionary>*)initWithContentsOfFile:(NSString*)file;
-(NSObject<MinimalMutableDictionary>*)initWithContentsOfURL:(NSURL*)url;
-(NSObject<MinimalMutableDictionary>*)initWithDictionary:(NSDictionary*)dictionary;
-(NSObject<MinimalMutableDictionary>*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(NSObject<MinimalMutableDictionary>*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(void)dealloc;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol MutableArrayIndexFollower <BasicTester>
@property (retain) NSMutableDictionary* __arrayObjectIndexes;
-(void)allObjectsMoved;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)doAddIndex:(NSUInteger)index forObject:(id)object;
-(void)doChangeIndex:(NSUInteger)fromIndex toIndex:(NSUInteger)toIndex forObject:(id)object;
-(void)doRemoveIndex:(NSUInteger)index forObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol MutableDictionaryKeyFollower <BasicTester>
@property (retain) NSMutableDictionary* __dictionaryObjectKeys;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol MutableSet <MutableSetDelegate, Set>
@property (readonly) NSMutableSet* __mutableSet;
+(id)setWithCapacity:(NSUInteger)numItems;
-(NSObject<MutableSet>*)init;
-(NSObject<MutableSet>*)initWithArray:(NSArray*)array;
-(NSObject<MutableSet>*)initWithCapacity:(NSUInteger)numItems;
-(NSObject<MutableSet>*)initWithCoder:(NSCoder*)coder;
-(NSObject<MutableSet>*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSObject<MutableSet>*)initWithSet:(NSSet*)set;
-(NSObject<MutableSet>*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)dealloc;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)setSet:(NSSet*)set;
-(void)unionSet:(NSSet*)set;

@end









@protocol ObjectID <NSCopying>
@property (readonly) ULL makerID;
@property (readonly) ULL objectID;
-(BOOL)isEqual:(id)obj;
-(id)copyWithZone:(NSZone *)zone;
-(NSUInteger)hash;
-(void)dealloc;

@end









@protocol Tester <BasicTester>
@property (retain) NSArray* _allKeys;
@property (retain) NSArray* _allObjects;
@property (retain,nonatomic) NSMutableDictionary* _dictionary;
@property  NSUInteger _index;
@property  NSUInteger _index1;
@property (retain,nonatomic) NSMutableIndexSet* _indexes;
@property (assign) NSString* _key;
@property (retain,nonatomic) NSMutableArray* _keyArray;
@property (assign) id _object;
@property (assign) id _object2;
@property (retain,nonatomic) NSMutableArray* _objectArray;
@property (retain,nonatomic) NSMutableSet* _objectSet;
@property () NSRange _range;
@property (retain,nonatomic) NSDictionary* collections;
@property (readonly) NSMutableDictionary* dictionary;
@property (readonly) NSUInteger index;
@property (readonly) NSUInteger index1;
@property (readonly) NSMutableIndexSet* indexes;
@property (assign,readonly) NSString* key;
@property (readonly) NSMutableArray* keyArray;
@property (readonly) id object;
@property (readonly) id object2;
@property (readonly) NSMutableArray* objectArray;
@property (readonly) NSMutableSet* objectSet;
@property (readonly) NSMutableArray* randArray;
@property (readonly) NSMutableDictionary* randDictionary;
@property (readonly) NSMutableIndexSet* randInternalIndexSet;
@property (readonly) NSRange randInternalRange;
@property (readonly) NSString* randKey;
@property (readonly) NSMutableArray* randKeyArray;
@property (readonly) id randObject;
@property (readonly) NSMutableSet* randSet;
@property (readonly) NSRange range;
-(bool)passFailWithFormat:(NSString*)format,...;
-(id)object;
-(id)object2;
-(id)randObject;
-(int)expectNForSet:(NSString*)set givenBaseN:(int)N;
-(NSMutableArray*)keyArray;
-(NSMutableArray*)objectArray;
-(NSMutableArray*)randArray;
-(NSMutableArray*)randKeyArray;
-(NSMutableDictionary*)dictionary;
-(NSMutableDictionary*)randDictionary;
-(NSMutableIndexSet*)indexes;
-(NSMutableIndexSet*)randIndexSetWithCount:(int)count max:(int)max;
-(NSMutableIndexSet*)randInternalIndexSet;
-(NSMutableSet*)objectSet;
-(NSMutableSet*)randSet;
-(NSRange)randInternalRange;
-(NSRange)range;
-(NSString*)key;
-(NSString*)randKey;
-(NSString*)steps:(int)N;
-(NSUInteger)index;
-(NSUInteger)index1;
-(void)clearTest;
-(void)nextTest;
-(void)verifyRC;
-(void)verifyWillOpCounts;

@end









@protocol ArrayLinkEndpoint <MutableArrayIndexFollower>
@property  bool __restrictRef;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(bool)shouldAddObject:(id)object;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol BaseObject <ObjectID>
@property  int __arc;
@property (readonly) NSDictionary* __initUsingDictionary;
@property  int __rc;
@property (readonly) bool _needCommit;
@property (readonly) NSMutableDictionary* asNewDictionary;
@property (nonatomic,readonly) EndpointS_tracker* child_for_commits;
@property () bool needCommit;
@property (retain) NSObject<BaseObject>* parent_for_commit;
@property (readonly,nonatomic) Endpoint1* parent_for_commit_endpoint;
-(bool)_needCommit;
-(bool)isAcceptableChild_for_commit:(id)achild_for_commit;
-(bool)isAcceptableParent_for_commit:(id)aparent_for_commit;
-(bool)needCommit;
-(NSObject<BaseObject>*)init;
-(NSObject<BaseObject>*)initWithDictionary:(NSDictionary*)d;
-(NSMutableDictionary*)asNewDictionary;
-(NSObject<BaseObject>*)parent_for_commit;
-(NSObject<LinkEndpoint>*)child_for_commitToEndpoint:(id)achild_for_commit;
-(NSObject<LinkEndpoint>*)parent_for_commitToEndpoint:(id)aparent_for_commit;
-(void)addChild_for_commit:(NSObject<BaseObject>*)v;
-(void)addGraph:(NSMutableSet*)s;
-(void)commitModel:(CommitStage)stage;
-(void)die;
-(void)removeAllChild_for_commits;
-(void)removeChild_for_commit:(NSObject<BaseObject>*)v;
-(void)setNeedCommit:(bool)v;
-(void)setParent_for_commit:(NSObject<BaseObject>*)v;
-(void)setWithDictionary:(NSDictionary*)d;

@end









@protocol DictionaryLinkEndpoint <MutableDictionaryKeyFollower>
@property  bool __restrictRef;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol MutableArray <MinimalMutableArray>
-(void)addObjectsFromArray:(NSArray*)array;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;

@end









@protocol MutableDictionary <MinimalMutableDictionary>
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)removeAllObjects;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setValue:(id)object forKey:(NSString*)key;

@end









@protocol MutableSetMirrorTester <BasicTester, TesterCounter, MutableSet>
@property  int __addingToMirrorSet;
@property (retain) NSMutableSet* __mirrorSet;
@property  int __removingFromMirrorSet;
-(bool)shouldAddObject:(id)object;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)verifyMirrorSet;
-(void)willRemoveObject:(id)object;

@end









@protocol SetLinkEndpoint <MutableSet>
@property  bool __restrictRef;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(bool)shouldAddObject:(id)object;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)didAddObject:(id)object;
-(void)willRemoveObject:(id)object;

@end









@protocol TrackerMutableArray <MinimalMutableArray>
@property (retain) NSMutableArray* atomicArray;
@property (retain) NSMutableDictionary* deletedObjectMap;
@property (retain) IndexToIndexMap* indexToIndexMap;
@property  bool mappingIsValid;
-(NSUInteger)atomicArrayIndexForObjectAtIndex:(NSUInteger)ai;
-(NSUInteger)objectIndexForObjectAtIndexInAtomicArray:(NSUInteger)bi;
-(void)allObjectsMoved;
-(void)commitAtomicArray;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol TrackerMutableSet <MutableSet>
@property (retain) NSMutableSet* atomicSet;
-(void)commitAtomicSet;

@end









@protocol MutableArrayMirrorTester <TesterCounter, MutableArray, MutableArrayIndexFollower>
@property  int __addingToMirrorArray;
@property  int __removingFromMirrorArray;
-(bool)shouldAddObject:(id)object;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)stateOK;
-(void)verifyMirrorArray;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@protocol MutableDictionaryMirrorTester <TesterCounter, MutableDictionaryKeyFollower, MutableDictionary>
@property  int __addingToMirrorDictionary;
@property  int __removingFromMirrorDictionary;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)stateOK;
-(void)verifyMirrorDictionary;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@protocol TrackerMutableDictionary <MutableDictionary>
@property (retain) NSMutableDictionary* atomicDictionary;
-(void)commitAtomicDictionary;

@end




















#pragma mark -
#pragma mark Interfaces

@interface CollectionTestObject : NSObject {
    int intValue;
    NSMutableDictionary* subObjects;
    NSObject<Tester>* v_tester;
}

@property (readonly) NSString* description;
@property (readonly) int intValue;
@property (retain) NSMutableDictionary* subObjects;
@property (assign) NSObject<Tester>* tester;
-(id)autorelease;
-(id)retain;
-(CollectionTestObject*)_startObjectOfClassCollectionTestObject;
-(CollectionTestObject*)initWithInt:(int)v tester:(NSObject<Tester>*)atester;
-(NSString*)description;
-(void)dealloc;
-(void)didAdd;
-(void)didRemove;
-(void)release;
-(void)willAdd;
-(void)willRemove;

@end









@interface CollectionTestSubObject : NSObject {
    int __arc;
    int __rc;
    int rcInner;
    CollectionTestObject* testObject;
    int willAddCount;
    int willRemoveCount;
}

@property  int __arc;
@property  int __rc;
@property (readonly) NSString* description;
@property  int rcInner;
@property (readonly) int rcIs;
@property (readonly) int rcWillBe;
@property (assign) CollectionTestObject* testObject;
@property  int willAddCount;
@property  int willRemoveCount;
-(CollectionTestSubObject*)_startObjectOfClassCollectionTestSubObject;
-(CollectionTestSubObject*)initWithTestObject:(CollectionTestObject*)atestObject;
-(int)rcIs;
-(int)rcWillBe;
-(NSString*)description;
-(void)_autorelease;
-(void)_release;
-(void)_retain;
-(void)dealloc;

@end









@interface IndexToIndexMap : NSObject {
    NSMutableArray* atobMap;
    NSMutableIndexSet* aValidIndexes;
    NSMutableIndexSet* bValidIndexes;
}

@property (retain) NSMutableArray* atobMap;
@property (retain) NSMutableIndexSet* aValidIndexes;
@property (retain) NSMutableIndexSet* bValidIndexes;
-(bool)addAIndex:(NSUInteger)ai withBIndex:(NSUInteger)bi;
-(bool)removeAIndex:(NSUInteger)ai;
-(bool)shiftAIndexesFromIndex:(NSUInteger)fromi by:(int)d;
-(bool)shiftAIndexesInRange:(NSRange)r by:(int)d;
-(bool)swapBIndexesForAIndex:(NSUInteger)ai1 andAIndex:(NSUInteger)ai2;
-(IndexToIndexMap*)_startObjectOfClassIndexToIndexMap;
-(IndexToIndexMap*)init;
-(NSUInteger)aIndexForBIndex:(NSUInteger)bi;
-(NSUInteger)bIndexForAIndex:(NSUInteger)ai;
-(void)dealloc;
-(void)setIdentityWithCount:(NSUInteger)N;

@end









@interface IntCarrier : NSObject {
    int intValue;
}

@property () int intValue;
+(IntCarrier*)carrierWithInt:(int)v;
-(IntCarrier*)_startObjectOfClassIntCarrier;
-(IntCarrier*)initWithInt:(int)v;
-(void)dealloc;

@end









@interface NSArray(winterface)


-(id)derefedObjectAtIndex:(NSUInteger)index;

@end









@interface NSDictionary(winterface)


-(id)derefedObjectForKey:(id)key;

@end









@interface NSMutableArray(winterface)


-(void)addObject:(id)anObject weak:(bool)weakObject;
-(void)addWeakObject:(id)anObject;
-(void)insertObject:(id)anObject weak:(bool)weakObject atIndex:(NSUInteger)index;
-(void)insertWeakObject:(id)anObject atIndex:(NSUInteger)index;
-(void)replaceObjectAtIndex:(NSUInteger)index withObject:(id)anObject weak:(bool)weakObject;
-(void)replaceObjectAtIndex:(NSUInteger)index withWeakObject:(id)anObject;

@end









@interface NSMutableDictionary(winterface)


-(void)setObject:(id)anObject forPointerKey:(id)aKeyo;
-(void)setObject:(id)anObject forWeakKey:(id)aKeyo;
-(void)setObject:(id)anObject weak:(bool)weakObject forKey:(id)aKeyo weak:(bool)weakKey pointer:(bool)pointerKey;
-(void)setWeakObject:(id)anObject forKey:(id)aKeyo;
-(void)setWeakObject:(id)anObject forPointerKey:(id)aKeyo;
-(void)setWeakObject:(id)anObject forWeakKey:(id)aKeyo;

@end









@interface NSMutableSet(winterface)


-(void)addObject:(id)anObject weak:(bool)weakObject;
-(void)addWeakObject:(id)anObject;

@end









@interface NSString(winterface)


-(NSString*)urlEncodeUsingEncoding:(NSStringEncoding)encoding;

@end









@interface ObjectRegistry : NSObject {
    NSMutableDictionary* v__allObjects;
    int makerID;
    int nextObjectID;
}

@property (retain,nonatomic) NSMutableDictionary* _allObjects;
@property (readonly) NSDictionary* allObjects;
@property (readonly) int makerID;
@property (readonly) int nextObjectID;
+(ObjectRegistry*)getDefault;
-(bool)deregisterObject:(NSObject<ObjectID>*)obj;
-(bool)registerObject:(NSObject<ObjectID>*)obj;
-(ObjectRegistry*)_startObjectOfClassObjectRegistry;
-(NSDictionary*)allObjects;
-(void)dealloc;
-(void)newIDToMakerID:(ULL*)pmakerID toObjectID:(ULL*)pobjectID;

@end









@interface Util : NSObject {
}

+(bool) getInsertsAndDeletesAsIndexPathsInSection:(int)section whenChanging:(NSArray*)from to:(NSArray*)to inss:(NSArray**)pinss dels:(NSArray**)pdels;
+(bool) getInsertsAndDeletesAsIndexSetWhenChanging:(NSArray*)from to:(NSArray*)to inss:(NSIndexSet**)pinss dels:(NSIndexSet**)pdels;
+(bool) getInsertsAndDeletesForSetAsWhenChanging:(NSSet*)from to:(NSSet*)to inss:(NSSet**)pinss dels:(NSSet**)pdels;
+(bool) getInsertsAndDeletesWhenChanging:(NSArray*)from to:(NSArray*)to inss:(NSArray**)pinss dels:(NSArray**)pdels;
+(bool)objectOrString:(id)a equals:(id)b;
+(bool)viewIsConnected:(UIView*)view;
+(Util*)getDefault;
+(void)clearStaticData;
+(void)logString:(NSString*)str object:(NSObject*)obj;
+(void)logStringRecurse:(NSString*)str object:(NSObject*)obj;
-(Util*)_startObjectOfClassUtil;
-(void)dealloc;

@end









@interface AtomiclyMutableArray : NSMutableArray<Array> {
    NSArray* __array;
    NSMutableArray* __mutableArray;
    NSMutableArray<TrackerMutableArray>* trackerArray;
}

@property (readonly) NSArray* __array;
@property (readonly) NSMutableArray* __mutableArray;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
@property (retain) NSMutableArray<TrackerMutableArray>* trackerArray;
+(AtomiclyMutableArray*)array;
+(AtomiclyMutableArray*)arrayWithArray:(NSArray*)array;
+(AtomiclyMutableArray*)arrayWithContentsOfFile:(NSString*)file;
+(AtomiclyMutableArray*)arrayWithContentsOfURL:(NSURL*)url;
+(AtomiclyMutableArray*)arrayWithObject:(id)object;
+(AtomiclyMutableArray*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(AtomiclyMutableArray*)_startObjectOfClassAtomiclyMutableArray;
-(AtomiclyMutableArray*)init;
-(AtomiclyMutableArray*)initWithArray:(NSArray*)array;
-(AtomiclyMutableArray*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(AtomiclyMutableArray*)initWithCapacity:(NSUInteger)numItems;
-(AtomiclyMutableArray*)initWithCoder:(NSCoder*)coder;
-(AtomiclyMutableArray*)initWithContentsOfFile:(NSString*)file;
-(AtomiclyMutableArray*)initWithContentsOfURL:(NSURL*)url;
-(AtomiclyMutableArray*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)__commitSetArray:(NSArray*)array;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;

@end









@interface AtomiclyMutableDictionary : NSMutableDictionary<Dictionary> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __mutableDictionary;
    NSMutableDictionary<TrackerMutableDictionary>* trackerDictionary;
}

@property (readonly) NSDictionary* __dictionary;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
@property (retain) NSMutableDictionary<TrackerMutableDictionary>* trackerDictionary;
+(AtomiclyMutableDictionary*)dictionary;
+(AtomiclyMutableDictionary*)dictionaryWithContentsOfFile:(NSString*)file;
+(AtomiclyMutableDictionary*)dictionaryWithContentsOfURL:(NSURL*)url;
+(AtomiclyMutableDictionary*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(AtomiclyMutableDictionary*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(AtomiclyMutableDictionary*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)DictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(AtomiclyMutableDictionary*)_startObjectOfClassAtomiclyMutableDictionary;
-(AtomiclyMutableDictionary*)init;
-(AtomiclyMutableDictionary*)initWithCapacity:(NSUInteger)numItems;
-(AtomiclyMutableDictionary*)initWithCoder:(NSCoder*)coder;
-(AtomiclyMutableDictionary*)initWithContentsOfFile:(NSString*)file;
-(AtomiclyMutableDictionary*)initWithContentsOfURL:(NSURL*)url;
-(AtomiclyMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary;
-(AtomiclyMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(AtomiclyMutableDictionary*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)__commitSetDictionary:(NSDictionary*)Dictionary;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;

@end









@interface AtomiclyMutableSet : NSMutableSet<Set> {
    NSMutableSet* __mutableSet;
    NSSet* __set;
    NSMutableSet<TrackerMutableSet>* trackerSet;
}

@property (readonly) NSMutableSet* __mutableSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
@property (retain) NSMutableSet<TrackerMutableSet>* trackerSet;
+(AtomiclyMutableSet*)set;
+(AtomiclyMutableSet*)setWithArray:(NSArray*)array;
+(AtomiclyMutableSet*)setWithObject:(id)object;
+(AtomiclyMutableSet*)setWithSet:(NSSet*)set;
+(id)SetWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(AtomiclyMutableSet*)_startObjectOfClassAtomiclyMutableSet;
-(AtomiclyMutableSet*)init;
-(AtomiclyMutableSet*)initWithArray:(NSArray*)array;
-(AtomiclyMutableSet*)initWithCapacity:(NSUInteger)numItems;
-(AtomiclyMutableSet*)initWithCoder:(NSCoder*)coder;
-(AtomiclyMutableSet*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(AtomiclyMutableSet*)initWithSet:(NSSet*)set;
-(AtomiclyMutableSet*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)__commitSetSet:(NSSet*)Set;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;

@end









@interface Endpoint1 : NSObject<LinkEndpoint, ValueLinkEndpoint> {
    SEL acceptableSel;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
    id v_value;
}

@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
@property (assign) id value;
+(Endpoint1*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(bool)unacceptable:(id)obj;
-(id)value;
-(Endpoint1*)_startObjectOfClassEndpoint1;
-(Endpoint1*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)dealloc;
-(void)setValue:(id)v;

@end









@interface PointerKey : NSObject<NSCopying> {
    NSUInteger hash;
    id o;
}

@property (readonly) NSString* debugDescription;
@property (readonly) NSString* description;
@property (readonly) NSUInteger hash;
@property (readonly) id o;
+(PointerKey*)keyWithObject:(id)ao;
-(BOOL)isEqual:(id)object;
-(id) initWithObject:(id)ao;
-(id)copyWithZone:(NSZone *)zone;
-(PointerKey*)_startObjectOfClassPointerKey;
-(NSString*)debugDescription;
-(NSString*)description;
-(void)dealloc;

@end









@interface WeakObject : NSObject<NSCopying> {
    NSUInteger hash;
    void* o;
}

@property (readonly) NSString* debugDescription;
@property (readonly) NSString* description;
@property (readonly) NSUInteger hash;
@property (readonly) void* o;
+(NSObject*)deref:(NSObject*)ao;
+(WeakObject*)keyWithObject:(void*)ao;
-(BOOL)isEqual:(id)object;
-(id) initWithObject:(NSObject*)ao;
-(id)copyWithZone:(NSZone *)zone;
-(WeakObject*)_startObjectOfClassWeakObject;
-(NSString*)debugDescription;
-(NSString*)description;
-(void)dealloc;

@end









@interface ArrayTester : NSObject<Tester> {
    NSArray* v__allKeys;
    NSArray* v__allObjects;
    NSMutableDictionary* v__dictionary;
    NSUInteger _index;
    NSUInteger _index1;
    NSMutableIndexSet* v__indexes;
    NSString* v__key;
    NSMutableArray* v__keyArray;
    id v__object;
    id v__object2;
    NSMutableArray* v__objectArray;
    NSMutableSet* v__objectSet;
    NSRange _range;
    NSMutableArray* a;
    MutableArrayMirrorTesterImpl* b;
    WeakMutableArrayMirrorTesterImpl* c;
    NSDictionary* v_collections;
    NSMutableString* v_errs;
}

@property (retain) NSArray* _allKeys;
@property (retain) NSArray* _allObjects;
@property (retain,nonatomic) NSMutableDictionary* _dictionary;
@property  NSUInteger _index;
@property  NSUInteger _index1;
@property (retain,nonatomic) NSMutableIndexSet* _indexes;
@property (assign) NSString* _key;
@property (retain,nonatomic) NSMutableArray* _keyArray;
@property (assign) id _object;
@property (assign) id _object2;
@property (retain,nonatomic) NSMutableArray* _objectArray;
@property (retain,nonatomic) NSMutableSet* _objectSet;
@property () NSRange _range;
@property (retain) NSMutableArray* a;
@property (retain) MutableArrayMirrorTesterImpl* b;
@property (retain) WeakMutableArrayMirrorTesterImpl* c;
@property (retain,nonatomic) NSDictionary* collections;
@property (readonly) NSMutableDictionary* dictionary;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSUInteger index;
@property (readonly) NSUInteger index1;
@property (readonly) NSMutableIndexSet* indexes;
@property (assign,readonly) NSString* key;
@property (readonly) NSMutableArray* keyArray;
@property (readonly) id object;
@property (readonly) id object2;
@property (readonly) NSMutableArray* objectArray;
@property (readonly) NSMutableSet* objectSet;
@property (readonly) NSMutableArray* randArray;
@property (readonly) NSMutableDictionary* randDictionary;
@property (readonly) NSMutableIndexSet* randInternalIndexSet;
@property (readonly) NSRange randInternalRange;
@property (readonly) NSString* randKey;
@property (readonly) NSMutableArray* randKeyArray;
@property (readonly) id randObject;
@property (readonly) NSMutableSet* randSet;
@property (readonly) NSRange range;
@property (readonly) bool stateGood;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)passFailWithFormat:(NSString*)format,...;
-(bool)stateGood;
-(id)object;
-(id)object2;
-(id)randObject;
-(ArrayTester*)_startObjectOfClassArrayTester;
-(ArrayTester*)init;
-(int)expectNForSet:(NSString*)set givenBaseN:(int)N;
-(NSMutableArray*)keyArray;
-(NSMutableArray*)objectArray;
-(NSMutableArray*)randArray;
-(NSMutableArray*)randKeyArray;
-(NSMutableDictionary*)dictionary;
-(NSMutableDictionary*)randDictionary;
-(NSMutableIndexSet*)indexes;
-(NSMutableIndexSet*)randIndexSetWithCount:(int)count max:(int)max;
-(NSMutableIndexSet*)randInternalIndexSet;
-(NSMutableSet*)objectSet;
-(NSMutableSet*)randSet;
-(NSRange)randInternalRange;
-(NSRange)range;
-(NSString*)key;
-(NSString*)randKey;
-(NSString*)steps:(int)N;
-(NSUInteger)index;
-(NSUInteger)index1;
-(void)addObject;
-(void)addObjectsFromArray;
-(void)arrayByAddingObject;
-(void)arrayByAddingObjectsFromArray;
-(void)clearTest;
-(void)componentsJoinedByString;
-(void)containsObject;
-(void)count;
-(void)dealloc;
-(void)exchangeObjectAtIndexWithObjectAtIndex;
-(void)firstObjectCommonWithArray;
-(void)getObjects;
-(void)indexOfObject;
-(void)indexOfObjectIdenticalTo;
-(void)indexOfObjectIdenticalToInRange;
-(void)indexOfObjectInRange;
-(void)insertObjectAtIndex;
-(void)insertObjectsAtIndexes;
-(void)isEqualToArray;
-(void)lastObject;
-(void)nextTest;
-(void)objectAtIndex;
-(void)objectsAtIndexes;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject;
-(void)removeObjectAtIndex;
-(void)removeObjectIdenticalTo;
-(void)removeObjectIdenticalToInRange;
-(void)removeObjectInRange;
-(void)removeObjectsAtIndexes;
-(void)removeObjectsInArray;
-(void)removeObjectsInRange;
-(void)replaceObjectAtIndexWithObject;
-(void)replaceObjectsAtIndexesWithObjects;
-(void)replaceObjectsInRangeWithObjectsFromArray;
-(void)replaceObjectsInRangeWithObjectsFromArrayRange;
-(void)setArray;
-(void)step;
-(void)subarrayWithRange;
-(void)verifyRC;
-(void)verifyWillOpCounts;

@end









@interface DictionaryTester : NSObject<Tester> {
    NSArray* v__allKeys;
    NSArray* v__allObjects;
    NSMutableDictionary* v__dictionary;
    NSUInteger _index;
    NSUInteger _index1;
    NSMutableIndexSet* v__indexes;
    NSString* v__key;
    NSMutableArray* v__keyArray;
    id v__object;
    id v__object2;
    NSMutableArray* v__objectArray;
    NSMutableSet* v__objectSet;
    NSRange _range;
    NSMutableDictionary* a;
    MutableDictionaryMirrorTesterImpl* b;
    WeakMutableDictionaryMirrorTesterImpl* c;
    NSDictionary* v_collections;
    NSMutableString* v_errs;
}

@property (retain) NSArray* _allKeys;
@property (retain) NSArray* _allObjects;
@property (retain,nonatomic) NSMutableDictionary* _dictionary;
@property  NSUInteger _index;
@property  NSUInteger _index1;
@property (retain,nonatomic) NSMutableIndexSet* _indexes;
@property (assign) NSString* _key;
@property (retain,nonatomic) NSMutableArray* _keyArray;
@property (assign) id _object;
@property (assign) id _object2;
@property (retain,nonatomic) NSMutableArray* _objectArray;
@property (retain,nonatomic) NSMutableSet* _objectSet;
@property () NSRange _range;
@property (retain) NSMutableDictionary* a;
@property (retain) MutableDictionaryMirrorTesterImpl* b;
@property (retain) WeakMutableDictionaryMirrorTesterImpl* c;
@property (retain,nonatomic) NSDictionary* collections;
@property (readonly) NSMutableDictionary* dictionary;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSUInteger index;
@property (readonly) NSUInteger index1;
@property (readonly) NSMutableIndexSet* indexes;
@property (assign,readonly) NSString* key;
@property (readonly) NSMutableArray* keyArray;
@property (readonly) id object;
@property (readonly) id object2;
@property (readonly) NSMutableArray* objectArray;
@property (readonly) NSMutableSet* objectSet;
@property (readonly) NSMutableArray* randArray;
@property (readonly) NSMutableDictionary* randDictionary;
@property (readonly) NSMutableIndexSet* randInternalIndexSet;
@property (readonly) NSRange randInternalRange;
@property (readonly) NSString* randKey;
@property (readonly) NSMutableArray* randKeyArray;
@property (readonly) id randObject;
@property (readonly) NSMutableSet* randSet;
@property (readonly) NSRange range;
@property (readonly) bool stateGood;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)passFailWithFormat:(NSString*)format,...;
-(bool)stateGood;
-(id)object;
-(id)object2;
-(id)randObject;
-(DictionaryTester*)_startObjectOfClassDictionaryTester;
-(DictionaryTester*)init;
-(int)expectNForSet:(NSString*)set givenBaseN:(int)N;
-(NSMutableArray*)keyArray;
-(NSMutableArray*)objectArray;
-(NSMutableArray*)randArray;
-(NSMutableArray*)randKeyArray;
-(NSMutableDictionary*)dictionary;
-(NSMutableDictionary*)randDictionary;
-(NSMutableIndexSet*)indexes;
-(NSMutableIndexSet*)randIndexSetWithCount:(int)count max:(int)max;
-(NSMutableIndexSet*)randInternalIndexSet;
-(NSMutableSet*)objectSet;
-(NSMutableSet*)randSet;
-(NSRange)randInternalRange;
-(NSRange)range;
-(NSString*)key;
-(NSString*)randKey;
-(NSString*)steps:(int)N;
-(NSUInteger)index;
-(NSUInteger)index1;
-(void)addEntriesFromDictionary;
-(void)allKeys;
-(void)allKeysForObject;
-(void)allValues;
-(void)clearTest;
-(void)count;
-(void)dealloc;
-(void)isEqualToDictionary;
-(void)nextTest;
-(void)objectForKey;
-(void)objectsForKeysNotFoundMarker;
-(void)removeAllObjects;
-(void)removeObjectForKey;
-(void)removeObjectsForKeys;
-(void)setDictionary;
-(void)setObjectForKey;
-(void)setValueForKey;
-(void)step;
-(void)valueForKey;
-(void)verifyRC;
-(void)verifyWillOpCounts;

@end









@interface MutableSet : NSMutableSet<MutableSet> {
    NSMutableSet* __mutableSet;
    NSSet* __set;
    NSObject<MutableSetDelegate>* setDelegate;
}

@property (readonly) NSMutableSet* __mutableSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
@property (retain) NSObject<MutableSetDelegate>* setDelegate;
+(MutableSet*)set;
+(MutableSet*)setWithArray:(NSArray*)array;
+(MutableSet*)setWithObject:(id)object;
+(MutableSet*)setWithSet:(NSSet*)set;
+(id)setWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)shouldAddObject:(id)object;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(MutableSet*)_startObjectOfClassMutableSet;
-(MutableSet*)init;
-(MutableSet*)initWithArray:(NSArray*)array;
-(MutableSet*)initWithCapacity:(NSUInteger)numItems;
-(MutableSet*)initWithCoder:(NSCoder*)coder;
-(MutableSet*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(MutableSet*)initWithSet:(NSSet*)set;
-(MutableSet*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)willRemoveObject:(id)object;

@end









@interface ObjectPointer : NSObject<ObjectID> {
    ULL makerID;
    ULL objectID;
}

@property (readonly) ULL makerID;
@property (readonly) ULL objectID;
+(NSData*)dataForObject:(NSObject<ObjectID>*)object;
+(NSData*)dataWithMakerID:(ULL)makerID objectID:(ULL)objectID;
+(ObjectPointer*)pointerWithMakerID:(ULL)amakerID objectID:(ULL)aobjectID;
-(bool)initObjWithDictionary:(NSDictionary*)d;
-(BOOL)isEqual:(id)obj;
-(id)_initWithMakerID:(ULL)amakerID objectID:(ULL)aobjectID;
-(id)copyWithZone:(NSZone *)zone;
-(ObjectPointer*)_startObjectOfClassObjectPointer;
-(ObjectPointer*)init;
-(NSUInteger)hash;
-(void)dealloc;

@end









@interface SetTester : NSObject<Tester> {
    NSArray* v__allKeys;
    NSArray* v__allObjects;
    NSMutableDictionary* v__dictionary;
    NSUInteger _index;
    NSUInteger _index1;
    NSMutableIndexSet* v__indexes;
    NSString* v__key;
    NSMutableArray* v__keyArray;
    id v__object;
    id v__object2;
    NSMutableArray* v__objectArray;
    NSMutableSet* v__objectSet;
    NSRange _range;
    NSMutableSet* a;
    MutableSetMirrorTesterImpl* b;
    WeakMutableSetMirrorTesterImpl* c;
    NSDictionary* v_collections;
    NSMutableString* v_errs;
}

@property (retain) NSArray* _allKeys;
@property (retain) NSArray* _allObjects;
@property (retain,nonatomic) NSMutableDictionary* _dictionary;
@property  NSUInteger _index;
@property  NSUInteger _index1;
@property (retain,nonatomic) NSMutableIndexSet* _indexes;
@property (assign) NSString* _key;
@property (retain,nonatomic) NSMutableArray* _keyArray;
@property (assign) id _object;
@property (assign) id _object2;
@property (retain,nonatomic) NSMutableArray* _objectArray;
@property (retain,nonatomic) NSMutableSet* _objectSet;
@property () NSRange _range;
@property (retain) NSMutableSet* a;
@property (retain) MutableSetMirrorTesterImpl* b;
@property (retain) WeakMutableSetMirrorTesterImpl* c;
@property (retain,nonatomic) NSDictionary* collections;
@property (readonly) NSMutableDictionary* dictionary;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSUInteger index;
@property (readonly) NSUInteger index1;
@property (readonly) NSMutableIndexSet* indexes;
@property (assign,readonly) NSString* key;
@property (readonly) NSMutableArray* keyArray;
@property (readonly) id object;
@property (readonly) id object2;
@property (readonly) NSMutableArray* objectArray;
@property (readonly) NSMutableSet* objectSet;
@property (readonly) NSMutableArray* randArray;
@property (readonly) NSMutableDictionary* randDictionary;
@property (readonly) NSMutableIndexSet* randInternalIndexSet;
@property (readonly) NSRange randInternalRange;
@property (readonly) NSString* randKey;
@property (readonly) NSMutableArray* randKeyArray;
@property (readonly) id randObject;
@property (readonly) NSMutableSet* randSet;
@property (readonly) NSRange range;
@property (readonly) bool stateGood;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)passFailWithFormat:(NSString*)format,...;
-(bool)stateGood;
-(id)object;
-(id)object2;
-(id)randObject;
-(SetTester*)_startObjectOfClassSetTester;
-(SetTester*)init;
-(int)expectNForSet:(NSString*)set givenBaseN:(int)N;
-(NSMutableArray*)keyArray;
-(NSMutableArray*)objectArray;
-(NSMutableArray*)randArray;
-(NSMutableArray*)randKeyArray;
-(NSMutableDictionary*)dictionary;
-(NSMutableDictionary*)randDictionary;
-(NSMutableIndexSet*)indexes;
-(NSMutableIndexSet*)randIndexSetWithCount:(int)count max:(int)max;
-(NSMutableIndexSet*)randInternalIndexSet;
-(NSMutableSet*)objectSet;
-(NSMutableSet*)randSet;
-(NSRange)randInternalRange;
-(NSRange)range;
-(NSString*)key;
-(NSString*)randKey;
-(NSString*)steps:(int)N;
-(NSUInteger)index;
-(NSUInteger)index1;
-(void)addObject;
-(void)addObjectsFromArray;
-(void)allObjects;
-(void)clearTest;
-(void)containsObject;
-(void)count;
-(void)dealloc;
-(void)intersectSet;
-(void)intersectsSet;
-(void)isEqualToSet;
-(void)isSubsetOfSet;
-(void)member;
-(void)minusSet;
-(void)nextTest;
-(void)removeAllObjects;
-(void)removeObject;
-(void)setByAddingObject;
-(void)setByAddingObjectsFromArray;
-(void)setByAddingObjectsFromSet;
-(void)setSet;
-(void)step;
-(void)unionSet;
-(void)verifyRC;
-(void)verifyWillOpCounts;

@end









@interface WeakMutableSet : NSMutableSet<WeakSet, MutableSet> {
    NSMutableSet* __mutableSet;
    NSSet* __set;
    NSObject<MutableSetDelegate>* setDelegate;
}

@property (readonly) NSMutableSet* __mutableSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
@property (retain) NSObject<MutableSetDelegate>* setDelegate;
+(WeakMutableSet*)set;
+(WeakMutableSet*)setWithArray:(NSArray*)array;
+(WeakMutableSet*)setWithObject:(id)object;
+(WeakMutableSet*)setWithSet:(NSSet*)set;
+(id)setWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)shouldAddObject:(id)object;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(WeakMutableSet*)_startObjectOfClassWeakMutableSet;
-(WeakMutableSet*)init;
-(WeakMutableSet*)initWithArray:(NSArray*)array;
-(WeakMutableSet*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableSet*)initWithCoder:(NSCoder*)coder;
-(WeakMutableSet*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(WeakMutableSet*)initWithSet:(NSSet*)set;
-(WeakMutableSet*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)willRemoveObject:(id)object;

@end









@interface EndpointA : NSMutableArray<MutableArray, LinkEndpoint, ArrayLinkEndpoint> {
    NSArray* __array;
    NSMutableDictionary* __arrayObjectIndexes;
    NSMutableArray* __mutableArray;
    bool __restrictRef;
    SEL acceptableSel;
    NSMutableString* v_errs;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSArray* __array;
@property (retain) NSMutableDictionary* __arrayObjectIndexes;
@property (readonly) NSMutableArray* __mutableArray;
@property  bool __restrictRef;
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(EndpointA*)array;
+(EndpointA*)arrayWithArray:(NSArray*)array;
+(EndpointA*)arrayWithContentsOfFile:(NSString*)file;
+(EndpointA*)arrayWithContentsOfURL:(NSURL*)url;
+(EndpointA*)arrayWithObject:(id)object;
+(EndpointA*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(EndpointA*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(bool)unacceptable:(id)obj;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(EndpointA*)_startObjectOfClassEndpointA;
-(EndpointA*)init;
-(EndpointA*)initWithArray:(NSArray*)array;
-(EndpointA*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(EndpointA*)initWithCapacity:(NSUInteger)numItems;
-(EndpointA*)initWithCoder:(NSCoder*)coder;
-(EndpointA*)initWithContentsOfFile:(NSString*)file;
-(EndpointA*)initWithContentsOfURL:(NSURL*)url;
-(EndpointA*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(EndpointA*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)doAddIndex:(NSUInteger)index forObject:(id)object;
-(void)doChangeIndex:(NSUInteger)fromIndex toIndex:(NSUInteger)toIndex forObject:(id)object;
-(void)doRemoveIndex:(NSUInteger)index forObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface EndpointA_tracker : NSMutableArray<TrackerMutableArray, LinkEndpoint, ArrayLinkEndpoint> {
    NSArray* __array;
    NSMutableDictionary* __arrayObjectIndexes;
    NSMutableArray* __mutableArray;
    bool __restrictRef;
    SEL acceptableSel;
    NSMutableArray* atomicArray;
    NSMutableDictionary* deletedObjectMap;
    NSMutableString* v_errs;
    IndexToIndexMap* indexToIndexMap;
    bool mappingIsValid;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSArray* __array;
@property (retain) NSMutableDictionary* __arrayObjectIndexes;
@property (readonly) NSMutableArray* __mutableArray;
@property  bool __restrictRef;
@property (readonly,nonatomic) SEL acceptableSel;
@property (retain) NSMutableArray* atomicArray;
@property (readonly) NSUInteger count;
@property (retain) NSMutableDictionary* deletedObjectMap;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (retain) IndexToIndexMap* indexToIndexMap;
@property (readonly) id lastObject;
@property  bool mappingIsValid;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(EndpointA_tracker*)array;
+(EndpointA_tracker*)arrayWithArray:(NSArray*)array;
+(EndpointA_tracker*)arrayWithContentsOfFile:(NSString*)file;
+(EndpointA_tracker*)arrayWithContentsOfURL:(NSURL*)url;
+(EndpointA_tracker*)arrayWithObject:(id)object;
+(EndpointA_tracker*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(EndpointA_tracker*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(bool)unacceptable:(id)obj;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(EndpointA_tracker*)_startObjectOfClassEndpointA_tracker;
-(EndpointA_tracker*)init;
-(EndpointA_tracker*)initWithArray:(NSArray*)array;
-(EndpointA_tracker*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(EndpointA_tracker*)initWithCapacity:(NSUInteger)numItems;
-(EndpointA_tracker*)initWithCoder:(NSCoder*)coder;
-(EndpointA_tracker*)initWithContentsOfFile:(NSString*)file;
-(EndpointA_tracker*)initWithContentsOfURL:(NSURL*)url;
-(EndpointA_tracker*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(EndpointA_tracker*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)atomicArrayIndexForObjectAtIndex:(NSUInteger)ai;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)objectIndexForObjectAtIndexInAtomicArray:(NSUInteger)bi;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addObject:(id)object;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)commitAtomicArray;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)doAddIndex:(NSUInteger)index forObject:(id)object;
-(void)doChangeIndex:(NSUInteger)fromIndex toIndex:(NSUInteger)toIndex forObject:(id)object;
-(void)doRemoveIndex:(NSUInteger)index forObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeLastObject;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface EndpointD : NSMutableDictionary<MutableDictionary, LinkEndpoint, DictionaryLinkEndpoint> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __dictionaryObjectKeys;
    NSMutableDictionary* __mutableDictionary;
    bool __restrictRef;
    SEL acceptableSel;
    NSMutableString* v_errs;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSDictionary* __dictionary;
@property (retain) NSMutableDictionary* __dictionaryObjectKeys;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property  bool __restrictRef;
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
+(EndpointD*)dictionary;
+(EndpointD*)dictionaryWithContentsOfFile:(NSString*)file;
+(EndpointD*)dictionaryWithContentsOfURL:(NSURL*)url;
+(EndpointD*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(EndpointD*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(EndpointD*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(EndpointD*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(bool)unacceptable:(id)obj;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(EndpointD*)_startObjectOfClassEndpointD;
-(EndpointD*)init;
-(EndpointD*)initWithCapacity:(NSUInteger)numItems;
-(EndpointD*)initWithCoder:(NSCoder*)coder;
-(EndpointD*)initWithContentsOfFile:(NSString*)file;
-(EndpointD*)initWithContentsOfURL:(NSURL*)url;
-(EndpointD*)initWithDictionary:(NSDictionary*)dictionary;
-(EndpointD*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(EndpointD*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(EndpointD*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface EndpointS : NSMutableSet<MutableSet, LinkEndpoint, SetLinkEndpoint> {
    NSMutableSet* __mutableSet;
    bool __restrictRef;
    NSSet* __set;
    SEL acceptableSel;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSMutableSet* __mutableSet;
@property  bool __restrictRef;
@property (readonly) NSSet* __set;
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
+(EndpointS*)set;
+(EndpointS*)setWithArray:(NSArray*)array;
+(EndpointS*)setWithObject:(id)object;
+(EndpointS*)setWithSet:(NSSet*)set;
+(EndpointS*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)setWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)shouldAddObject:(id)object;
-(bool)unacceptable:(id)obj;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(EndpointS*)_startObjectOfClassEndpointS;
-(EndpointS*)init;
-(EndpointS*)initWithArray:(NSArray*)array;
-(EndpointS*)initWithCapacity:(NSUInteger)numItems;
-(EndpointS*)initWithCoder:(NSCoder*)coder;
-(EndpointS*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(EndpointS*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(EndpointS*)initWithSet:(NSSet*)set;
-(EndpointS*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)willRemoveObject:(id)object;

@end









@interface EndpointS_tracker : NSMutableSet<TrackerMutableSet, LinkEndpoint, SetLinkEndpoint> {
    NSMutableSet* __mutableSet;
    bool __restrictRef;
    NSSet* __set;
    SEL acceptableSel;
    NSMutableSet* atomicSet;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSMutableSet* __mutableSet;
@property  bool __restrictRef;
@property (readonly) NSSet* __set;
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (retain) NSMutableSet* atomicSet;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
+(EndpointS_tracker*)set;
+(EndpointS_tracker*)setWithArray:(NSArray*)array;
+(EndpointS_tracker*)setWithObject:(id)object;
+(EndpointS_tracker*)setWithSet:(NSSet*)set;
+(EndpointS_tracker*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)setWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)shouldAddObject:(id)object;
-(bool)unacceptable:(id)obj;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(EndpointS_tracker*)_startObjectOfClassEndpointS_tracker;
-(EndpointS_tracker*)init;
-(EndpointS_tracker*)initWithArray:(NSArray*)array;
-(EndpointS_tracker*)initWithCapacity:(NSUInteger)numItems;
-(EndpointS_tracker*)initWithCoder:(NSCoder*)coder;
-(EndpointS_tracker*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(EndpointS_tracker*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(EndpointS_tracker*)initWithSet:(NSSet*)set;
-(EndpointS_tracker*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)commitAtomicSet;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)willRemoveObject:(id)object;

@end









@interface Model : NSObject<BaseObject> {
    int __arc;
    NSDictionary* __initUsingDictionary;
    int __rc;
    bool _needCommit;
    EndpointS_tracker* v_child_for_commits;
    int commitStage;
    bool inCommit;
    ULL makerID;
    bool needCommit;
    ULL objectID;
    Endpoint1* v_parent_for_commit_endpoint;
}

@property  int __arc;
@property (readonly) NSDictionary* __initUsingDictionary;
@property  int __rc;
@property (readonly) bool _needCommit;
@property (readonly) NSMutableDictionary* asNewDictionary;
@property (nonatomic,readonly) EndpointS_tracker* child_for_commits;
@property  int commitStage;
@property (readonly) bool inCommit;
@property (readonly) ULL makerID;
@property () bool needCommit;
@property (readonly) ULL objectID;
@property (retain) NSObject<BaseObject>* parent_for_commit;
@property (readonly,nonatomic) Endpoint1* parent_for_commit_endpoint;
+(Model*)get;
+(Model*)getWithDictionary:(NSDictionary*)d;
+(bool)commit;
+(Class)classFromName:(NSString*)className;
+(id)getBaseObjectWithDictionary:(NSObject*)dict;
+(id)representationOfObject:(NSObject*)o;
+(Model*)getDefault;
-(bool)_commit;
-(bool)_needCommit;
-(bool)isAcceptableChild_for_commit:(id)achild_for_commit;
-(bool)isAcceptableParent_for_commit:(id)aparent_for_commit;
-(BOOL)isEqual:(id)obj;
-(bool)needCommit;
-(id)copyWithZone:(NSZone *)zone;
-(Model*)_startObjectOfClassModel;
-(Model*)init;
-(Model*)initWithDictionary:(NSDictionary*)d;
-(NSMutableDictionary*)asNewDictionary;
-(NSObject<BaseObject>*)parent_for_commit;
-(NSObject<LinkEndpoint>*)child_for_commitToEndpoint:(id)achild_for_commit;
-(NSObject<LinkEndpoint>*)parent_for_commitToEndpoint:(id)aparent_for_commit;
-(NSUInteger)hash;
-(void)addChild_for_commit:(NSObject<BaseObject>*)v;
-(void)addGraph:(NSMutableSet*)s;
-(void)commitModel:(CommitStage)stage;
-(void)dealloc;
-(void)die;
-(void)removeAllChild_for_commits;
-(void)removeChild_for_commit:(NSObject<BaseObject>*)v;
-(void)setNeedCommit:(bool)v;
-(void)setParent_for_commit:(NSObject<BaseObject>*)v;
-(void)setWithDictionary:(NSDictionary*)d;

@end









@interface MutableArray : NSMutableArray<MutableArray> {
    NSArray* __array;
    NSMutableArray* __mutableArray;
    NSObject<MutableArrayDelegate>* arrayDelegate;
}

@property (readonly) NSArray* __array;
@property (readonly) NSMutableArray* __mutableArray;
@property (retain) NSObject<MutableArrayDelegate>* arrayDelegate;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(MutableArray*)array;
+(MutableArray*)arrayWithArray:(NSArray*)array;
+(MutableArray*)arrayWithContentsOfFile:(NSString*)file;
+(MutableArray*)arrayWithContentsOfURL:(NSURL*)url;
+(MutableArray*)arrayWithObject:(id)object;
+(MutableArray*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)shouldAddObject:(id)object;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(MutableArray*)_startObjectOfClassMutableArray;
-(MutableArray*)init;
-(MutableArray*)initWithArray:(NSArray*)array;
-(MutableArray*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(MutableArray*)initWithCapacity:(NSUInteger)numItems;
-(MutableArray*)initWithCoder:(NSCoder*)coder;
-(MutableArray*)initWithContentsOfFile:(NSString*)file;
-(MutableArray*)initWithContentsOfURL:(NSURL*)url;
-(MutableArray*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface MutableDictionary : NSMutableDictionary<MutableDictionary> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __mutableDictionary;
    NSObject<MutableDictionaryDelegate>* dictionaryDelegate;
}

@property (readonly) NSDictionary* __dictionary;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain) NSObject<MutableDictionaryDelegate>* dictionaryDelegate;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
+(MutableDictionary*)dictionary;
+(MutableDictionary*)dictionaryWithContentsOfFile:(NSString*)file;
+(MutableDictionary*)dictionaryWithContentsOfURL:(NSURL*)url;
+(MutableDictionary*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(MutableDictionary*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(MutableDictionary*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(MutableDictionary*)_startObjectOfClassMutableDictionary;
-(MutableDictionary*)init;
-(MutableDictionary*)initWithCapacity:(NSUInteger)numItems;
-(MutableDictionary*)initWithCoder:(NSCoder*)coder;
-(MutableDictionary*)initWithContentsOfFile:(NSString*)file;
-(MutableDictionary*)initWithContentsOfURL:(NSURL*)url;
-(MutableDictionary*)initWithDictionary:(NSDictionary*)dictionary;
-(MutableDictionary*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(MutableDictionary*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface MutableSetMirrorTesterImpl : NSMutableSet<MutableSetMirrorTester> {
    int __addingToMirrorSet;
    NSMutableSet* __mirrorSet;
    NSMutableSet* __mutableSet;
    int __removingFromMirrorSet;
    NSSet* __set;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorSet;
@property (retain) NSMutableSet* __mirrorSet;
@property (readonly) NSMutableSet* __mutableSet;
@property  int __removingFromMirrorSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSEnumerator* objectEnumerator;
+(MutableSetMirrorTesterImpl*)set;
+(MutableSetMirrorTesterImpl*)setWithArray:(NSArray*)array;
+(MutableSetMirrorTesterImpl*)setWithObject:(id)object;
+(MutableSetMirrorTesterImpl*)setWithSet:(NSSet*)set;
+(id)setWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(MutableSetMirrorTesterImpl*)_startObjectOfClassMutableSetMirrorTesterImpl;
-(MutableSetMirrorTesterImpl*)init;
-(MutableSetMirrorTesterImpl*)initWithArray:(NSArray*)array;
-(MutableSetMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(MutableSetMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(MutableSetMirrorTesterImpl*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(MutableSetMirrorTesterImpl*)initWithSet:(NSSet*)set;
-(MutableSetMirrorTesterImpl*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)verifyMirrorSet;
-(void)willRemoveObject:(id)object;

@end









@interface TrackerMutableArray : NSMutableArray<TrackerMutableArray> {
    NSArray* __array;
    NSMutableArray* __mutableArray;
    NSMutableArray* atomicArray;
    NSMutableDictionary* deletedObjectMap;
    IndexToIndexMap* indexToIndexMap;
    bool mappingIsValid;
}

@property (readonly) NSArray* __array;
@property (readonly) NSMutableArray* __mutableArray;
@property (retain) NSMutableArray* atomicArray;
@property (readonly) NSUInteger count;
@property (retain) NSMutableDictionary* deletedObjectMap;
@property (readonly) NSString* description;
@property (retain) IndexToIndexMap* indexToIndexMap;
@property (readonly) id lastObject;
@property  bool mappingIsValid;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(TrackerMutableArray*)array;
+(TrackerMutableArray*)arrayWithArray:(NSArray*)array;
+(TrackerMutableArray*)arrayWithContentsOfFile:(NSString*)file;
+(TrackerMutableArray*)arrayWithContentsOfURL:(NSURL*)url;
+(TrackerMutableArray*)arrayWithObject:(id)object;
+(TrackerMutableArray*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)shouldAddObject:(id)object;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(TrackerMutableArray*)_startObjectOfClassTrackerMutableArray;
-(TrackerMutableArray*)init;
-(TrackerMutableArray*)initWithArray:(NSArray*)array;
-(TrackerMutableArray*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(TrackerMutableArray*)initWithCapacity:(NSUInteger)numItems;
-(TrackerMutableArray*)initWithCoder:(NSCoder*)coder;
-(TrackerMutableArray*)initWithContentsOfFile:(NSString*)file;
-(TrackerMutableArray*)initWithContentsOfURL:(NSURL*)url;
-(TrackerMutableArray*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)atomicArrayIndexForObjectAtIndex:(NSUInteger)ai;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)objectIndexForObjectAtIndexInAtomicArray:(NSUInteger)bi;
-(void)addObject:(id)object;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)commitAtomicArray;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeLastObject;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface TrackerMutableSet : NSMutableSet<TrackerMutableSet> {
    NSMutableSet* __mutableSet;
    NSSet* __set;
    NSMutableSet* atomicSet;
}

@property (readonly) NSMutableSet* __mutableSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (retain) NSMutableSet* atomicSet;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSEnumerator* objectEnumerator;
+(TrackerMutableSet*)set;
+(TrackerMutableSet*)setWithArray:(NSArray*)array;
+(TrackerMutableSet*)setWithObject:(id)object;
+(TrackerMutableSet*)setWithSet:(NSSet*)set;
+(id)setWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)shouldAddObject:(id)object;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(TrackerMutableSet*)_startObjectOfClassTrackerMutableSet;
-(TrackerMutableSet*)init;
-(TrackerMutableSet*)initWithArray:(NSArray*)array;
-(TrackerMutableSet*)initWithCapacity:(NSUInteger)numItems;
-(TrackerMutableSet*)initWithCoder:(NSCoder*)coder;
-(TrackerMutableSet*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(TrackerMutableSet*)initWithSet:(NSSet*)set;
-(TrackerMutableSet*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)commitAtomicSet;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)willRemoveObject:(id)object;

@end









@interface WeakMutableArray : NSMutableArray<MutableArray, WeakArray> {
    NSArray* __array;
    NSMutableArray* __mutableArray;
    NSObject<MutableArrayDelegate>* arrayDelegate;
}

@property (readonly) NSArray* __array;
@property (readonly) NSMutableArray* __mutableArray;
@property (retain) NSObject<MutableArrayDelegate>* arrayDelegate;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(WeakMutableArray*)array;
+(WeakMutableArray*)arrayWithArray:(NSArray*)array;
+(WeakMutableArray*)arrayWithContentsOfFile:(NSString*)file;
+(WeakMutableArray*)arrayWithContentsOfURL:(NSURL*)url;
+(WeakMutableArray*)arrayWithObject:(id)object;
+(WeakMutableArray*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)shouldAddObject:(id)object;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(WeakMutableArray*)_startObjectOfClassWeakMutableArray;
-(WeakMutableArray*)init;
-(WeakMutableArray*)initWithArray:(NSArray*)array;
-(WeakMutableArray*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(WeakMutableArray*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableArray*)initWithCoder:(NSCoder*)coder;
-(WeakMutableArray*)initWithContentsOfFile:(NSString*)file;
-(WeakMutableArray*)initWithContentsOfURL:(NSURL*)url;
-(WeakMutableArray*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(void)stateOK;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface WeakMutableDictionary : NSMutableDictionary<WeakDictionary, MutableDictionary> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __mutableDictionary;
    NSObject<MutableDictionaryDelegate>* dictionaryDelegate;
}

@property (readonly) NSDictionary* __dictionary;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain) NSObject<MutableDictionaryDelegate>* dictionaryDelegate;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
+(WeakMutableDictionary*)dictionary;
+(WeakMutableDictionary*)dictionaryWithContentsOfFile:(NSString*)file;
+(WeakMutableDictionary*)dictionaryWithContentsOfURL:(NSURL*)url;
+(WeakMutableDictionary*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(WeakMutableDictionary*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(WeakMutableDictionary*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(WeakMutableDictionary*)_startObjectOfClassWeakMutableDictionary;
-(WeakMutableDictionary*)init;
-(WeakMutableDictionary*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableDictionary*)initWithCoder:(NSCoder*)coder;
-(WeakMutableDictionary*)initWithContentsOfFile:(NSString*)file;
-(WeakMutableDictionary*)initWithContentsOfURL:(NSURL*)url;
-(WeakMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary;
-(WeakMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(WeakMutableDictionary*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface WeakMutableSetMirrorTesterImpl : NSMutableSet<MutableSetMirrorTester, WeakSet> {
    int __addingToMirrorSet;
    NSMutableSet* __mirrorSet;
    NSMutableSet* __mutableSet;
    int __removingFromMirrorSet;
    NSSet* __set;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorSet;
@property (retain) NSMutableSet* __mirrorSet;
@property (readonly) NSMutableSet* __mutableSet;
@property  int __removingFromMirrorSet;
@property (readonly) NSSet* __set;
@property (readonly) NSArray* allObjects;
@property (readonly) id anyObject;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSEnumerator* objectEnumerator;
+(WeakMutableSetMirrorTesterImpl*)set;
+(WeakMutableSetMirrorTesterImpl*)setWithArray:(NSArray*)array;
+(WeakMutableSetMirrorTesterImpl*)setWithObject:(id)object;
+(WeakMutableSetMirrorTesterImpl*)setWithSet:(NSSet*)set;
+(id)setWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)intersectsSet:(NSSet*)set;
-(BOOL)isEqualToSet:(NSSet*)set;
-(BOOL)isSubsetOfSet:(NSSet*)set;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(id)anyObject;
-(id)copyWithZone:(NSZone*)zone;
-(id)member:(id)object;
-(id)valueForKey:(NSString*)key;
-(WeakMutableSetMirrorTesterImpl*)_startObjectOfClassWeakMutableSetMirrorTesterImpl;
-(WeakMutableSetMirrorTesterImpl*)init;
-(WeakMutableSetMirrorTesterImpl*)initWithArray:(NSArray*)array;
-(WeakMutableSetMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableSetMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(WeakMutableSetMirrorTesterImpl*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(WeakMutableSetMirrorTesterImpl*)initWithSet:(NSSet*)set;
-(WeakMutableSetMirrorTesterImpl*)initWithSet:(NSSet*)set copyItems:(BOOL)copy;
-(NSArray*)allObjects;
-(NSArray*)sortedArrayUsingDescriptors:(NSArray*)sortDescriptors;
-(NSEnumerator*)objectEnumerator;
-(NSSet*)filteredSetUsingPredicate:(NSPredicate *)predicate;
-(NSSet*)objectsPassingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, BOOL *stop))predicate;
-(NSSet*)setByAddingObject:(id)object;
-(NSSet*)setByAddingObjectsFromArray:(NSArray*)array;
-(NSSet*)setByAddingObjectsFromSet:(NSSet*)set;
-(NSString*)description;
-(NSString*)descriptionWithLocale:(id)locale;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didRemoveObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, BOOL *stop))block;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)intersectSet:(NSSet*)set;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)minusSet:(NSSet*)set;
-(void)removeAllObjects;
-(void)removeObject:(id)object;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)setSet:(NSSet*)set;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)unionSet:(NSSet*)set;
-(void)verifyMirrorSet;
-(void)willRemoveObject:(id)object;

@end









@interface EndpointD_tracker : NSMutableDictionary<TrackerMutableDictionary, LinkEndpoint, DictionaryLinkEndpoint> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __dictionaryObjectKeys;
    NSMutableDictionary* __mutableDictionary;
    bool __restrictRef;
    SEL acceptableSel;
    NSMutableDictionary* atomicDictionary;
    NSMutableString* v_errs;
    SEL otherEndObjectToEndpoint;
    id v_owner;
    bool retains;
}

@property (readonly) NSDictionary* __dictionary;
@property (retain) NSMutableDictionary* __dictionaryObjectKeys;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property  bool __restrictRef;
@property (readonly,nonatomic) SEL acceptableSel;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (retain) NSMutableDictionary* atomicDictionary;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly,nonatomic) SEL otherEndObjectToEndpoint;
@property (nonatomic,readonly) id owner;
@property (readonly,nonatomic) bool retains;
+(EndpointD_tracker*)dictionary;
+(EndpointD_tracker*)dictionaryWithContentsOfFile:(NSString*)file;
+(EndpointD_tracker*)dictionaryWithContentsOfURL:(NSURL*)url;
+(EndpointD_tracker*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(EndpointD_tracker*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(EndpointD_tracker*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(EndpointD_tracker*)endpointWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(bool)_addReferrer:(NSObject<LinkEndpoint>*)ep;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(bool)unacceptable:(id)obj;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(EndpointD_tracker*)_startObjectOfClassEndpointD_tracker;
-(EndpointD_tracker*)init;
-(EndpointD_tracker*)initWithCapacity:(NSUInteger)numItems;
-(EndpointD_tracker*)initWithCoder:(NSCoder*)coder;
-(EndpointD_tracker*)initWithContentsOfFile:(NSString*)file;
-(EndpointD_tracker*)initWithContentsOfURL:(NSURL*)url;
-(EndpointD_tracker*)initWithDictionary:(NSDictionary*)dictionary;
-(EndpointD_tracker*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(EndpointD_tracker*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(EndpointD_tracker*)initWithOwner:(id)aowner retains:(bool)aretains acceptableSel:(SEL)aacceptableSel otherEndObjectToEndpoint:(SEL)aotherEndObjectToEndpoint;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSObject<LinkEndpoint>*)endpointForObject:(id)obj;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)_removeReferrer:(NSObject<LinkEndpoint>*)ep;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)commitAtomicDictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface MutableArrayMirrorTesterImpl : NSMutableArray<MutableArrayMirrorTester> {
    int __addingToMirrorArray;
    NSArray* __array;
    NSMutableDictionary* __arrayObjectIndexes;
    NSMutableArray* __mutableArray;
    int __removingFromMirrorArray;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorArray;
@property (readonly) NSArray* __array;
@property (retain) NSMutableDictionary* __arrayObjectIndexes;
@property (readonly) NSMutableArray* __mutableArray;
@property  int __removingFromMirrorArray;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(MutableArrayMirrorTesterImpl*)array;
+(MutableArrayMirrorTesterImpl*)arrayWithArray:(NSArray*)array;
+(MutableArrayMirrorTesterImpl*)arrayWithContentsOfFile:(NSString*)file;
+(MutableArrayMirrorTesterImpl*)arrayWithContentsOfURL:(NSURL*)url;
+(MutableArrayMirrorTesterImpl*)arrayWithObject:(id)object;
+(MutableArrayMirrorTesterImpl*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(MutableArrayMirrorTesterImpl*)_startObjectOfClassMutableArrayMirrorTesterImpl;
-(MutableArrayMirrorTesterImpl*)init;
-(MutableArrayMirrorTesterImpl*)initWithArray:(NSArray*)array;
-(MutableArrayMirrorTesterImpl*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(MutableArrayMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(MutableArrayMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(MutableArrayMirrorTesterImpl*)initWithContentsOfFile:(NSString*)file;
-(MutableArrayMirrorTesterImpl*)initWithContentsOfURL:(NSURL*)url;
-(MutableArrayMirrorTesterImpl*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)doAddIndex:(NSUInteger)index forObject:(id)object;
-(void)doChangeIndex:(NSUInteger)fromIndex toIndex:(NSUInteger)toIndex forObject:(id)object;
-(void)doRemoveIndex:(NSUInteger)index forObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(void)stateOK;
-(void)verifyMirrorArray;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface MutableDictionaryMirrorTesterImpl : NSMutableDictionary<MutableDictionaryMirrorTester> {
    int __addingToMirrorDictionary;
    NSDictionary* __dictionary;
    NSMutableDictionary* __dictionaryObjectKeys;
    NSMutableDictionary* __mutableDictionary;
    int __removingFromMirrorDictionary;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorDictionary;
@property (readonly) NSDictionary* __dictionary;
@property (retain) NSMutableDictionary* __dictionaryObjectKeys;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property  int __removingFromMirrorDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
+(MutableDictionaryMirrorTesterImpl*)dictionary;
+(MutableDictionaryMirrorTesterImpl*)dictionaryWithContentsOfFile:(NSString*)file;
+(MutableDictionaryMirrorTesterImpl*)dictionaryWithContentsOfURL:(NSURL*)url;
+(MutableDictionaryMirrorTesterImpl*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(MutableDictionaryMirrorTesterImpl*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(MutableDictionaryMirrorTesterImpl*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(MutableDictionaryMirrorTesterImpl*)_startObjectOfClassMutableDictionaryMirrorTesterImpl;
-(MutableDictionaryMirrorTesterImpl*)init;
-(MutableDictionaryMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(MutableDictionaryMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(MutableDictionaryMirrorTesterImpl*)initWithContentsOfFile:(NSString*)file;
-(MutableDictionaryMirrorTesterImpl*)initWithContentsOfURL:(NSURL*)url;
-(MutableDictionaryMirrorTesterImpl*)initWithDictionary:(NSDictionary*)dictionary;
-(MutableDictionaryMirrorTesterImpl*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(MutableDictionaryMirrorTesterImpl*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)verifyMirrorDictionary;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface TrackerMutableDictionary : NSMutableDictionary<TrackerMutableDictionary> {
    NSDictionary* __dictionary;
    NSMutableDictionary* __mutableDictionary;
    NSMutableDictionary* atomicDictionary;
}

@property (readonly) NSDictionary* __dictionary;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (retain) NSMutableDictionary* atomicDictionary;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
+(TrackerMutableDictionary*)dictionary;
+(TrackerMutableDictionary*)dictionaryWithContentsOfFile:(NSString*)file;
+(TrackerMutableDictionary*)dictionaryWithContentsOfURL:(NSURL*)url;
+(TrackerMutableDictionary*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(TrackerMutableDictionary*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(TrackerMutableDictionary*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(TrackerMutableDictionary*)_startObjectOfClassTrackerMutableDictionary;
-(TrackerMutableDictionary*)init;
-(TrackerMutableDictionary*)initWithCapacity:(NSUInteger)numItems;
-(TrackerMutableDictionary*)initWithCoder:(NSCoder*)coder;
-(TrackerMutableDictionary*)initWithContentsOfFile:(NSString*)file;
-(TrackerMutableDictionary*)initWithContentsOfURL:(NSURL*)url;
-(TrackerMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary;
-(TrackerMutableDictionary*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(TrackerMutableDictionary*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)commitAtomicDictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end









@interface WeakMutableArrayMirrorTesterImpl : NSMutableArray<WeakArray, MutableArrayMirrorTester> {
    int __addingToMirrorArray;
    NSArray* __array;
    NSMutableDictionary* __arrayObjectIndexes;
    NSMutableArray* __mutableArray;
    int __removingFromMirrorArray;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorArray;
@property (readonly) NSArray* __array;
@property (retain) NSMutableDictionary* __arrayObjectIndexes;
@property (readonly) NSMutableArray* __mutableArray;
@property  int __removingFromMirrorArray;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) id lastObject;
@property (readonly) NSEnumerator* objectEnumerator;
@property (readonly) NSEnumerator* reverseObjectEnumerator;
+(WeakMutableArrayMirrorTesterImpl*)array;
+(WeakMutableArrayMirrorTesterImpl*)arrayWithArray:(NSArray*)array;
+(WeakMutableArrayMirrorTesterImpl*)arrayWithContentsOfFile:(NSString*)file;
+(WeakMutableArrayMirrorTesterImpl*)arrayWithContentsOfURL:(NSURL*)url;
+(WeakMutableArrayMirrorTesterImpl*)arrayWithObject:(id)object;
+(WeakMutableArrayMirrorTesterImpl*)arrayWithObjects:(id*)objects count:(NSUInteger)count;
+(id)arrayWithCapacity:(NSUInteger)numItems;
-(BOOL)containsObject:(id)object;
-(BOOL)isEqualToArray:(NSArray*)array;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)firstObjectCommonWithArray:(NSArray*)array;
-(id)lastObject;
-(id)objectAtIndex:(NSUInteger)index;
-(id)valueForKey:(NSString*)key;
-(WeakMutableArrayMirrorTesterImpl*)_startObjectOfClassWeakMutableArrayMirrorTesterImpl;
-(WeakMutableArrayMirrorTesterImpl*)init;
-(WeakMutableArrayMirrorTesterImpl*)initWithArray:(NSArray*)array;
-(WeakMutableArrayMirrorTesterImpl*)initWithArray:(NSArray*)array copyItems:(BOOL)copy;
-(WeakMutableArrayMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableArrayMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(WeakMutableArrayMirrorTesterImpl*)initWithContentsOfFile:(NSString*)file;
-(WeakMutableArrayMirrorTesterImpl*)initWithContentsOfURL:(NSURL*)url;
-(WeakMutableArrayMirrorTesterImpl*)initWithObjects:(id*)objects count:(NSUInteger)count;
-(NSArray *)pathsMatchingExtensions:(NSArray *)filterTypes;
-(NSArray *)sortedArrayUsingComparator:(NSComparator)cmptr;
-(NSArray *)sortedArrayUsingDescriptors:(NSArray *)sortDescriptors;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context;
-(NSArray *)sortedArrayUsingFunction:(NSInteger (*)(id, id, void *))comparator context:(void *)context hint:(NSData *)hint;
-(NSArray *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)arrayByAddingObject:(id)object;
-(NSArray*)arrayByAddingObjectsFromArray:(NSArray*)array;
-(NSArray*)filteredArrayUsingPredicate:(NSPredicate *)predicate;
-(NSArray*)objectsAtIndexes:(NSIndexSet*)indexes;
-(NSArray*)sortedArrayUsingSelector:(SEL)selector;
-(NSArray*)subarrayWithRange:(NSRange)r;
-(NSData*)sortedArrayHint;
-(NSEnumerator*)objectEnumerator;
-(NSEnumerator*)reverseObjectEnumerator;
-(NSIndexSet*)indexesOfObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSIndexSet*)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSString *)componentsJoinedByString:(NSString *)separator;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)indexOfObject:(id)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator)cmp;
-(NSUInteger)indexOfObject:(id)object;
-(NSUInteger)indexOfObject:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object;
-(NSUInteger)indexOfObjectIdenticalTo:(id)object inRange:(NSRange)range;
-(NSUInteger)indexOfObjectPassingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id obj, NSUInteger idx, BOOL *stop))predicate;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addObject:(id)object;
-(void)addObjectsFromArray:(NSArray*)array;
-(void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void *)context;
-(void)allObjectsMoved;
-(void)dealloc;
-(void)didAddObject:(id)object;
-(void)didAddObject:(id)object withIndex:(NSUInteger)index;
-(void)didRemoveObject:(id)object;
-(void)doAddIndex:(NSUInteger)index forObject:(id)object;
-(void)doChangeIndex:(NSUInteger)fromIndex toIndex:(NSUInteger)toIndex forObject:(id)object;
-(void)doRemoveIndex:(NSUInteger)index forObject:(id)object;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateObjectsAtIndexes:(NSIndexSet *)indexSet options:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsUsingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id obj, NSUInteger idx, BOOL *stop))block;
-(void)exchangeObjectAtIndex:(NSUInteger)fromi withObjectAtIndex:(NSUInteger)toi;
-(void)filterUsingPredicate:(NSPredicate *)predicate;
-(void)getObjects:(id[])aBuffer range:(NSRange)aRange;
-(void)insertObject:(id)object atIndex:(NSUInteger)index;
-(void)insertObjects:(NSArray*)objects atIndexes:(NSIndexSet*)indexes;
-(void)makeObjectsPerformSelector:(SEL)selector;
-(void)makeObjectsPerformSelector:(SEL)selector withObject:(id)object;
-(void)objectsMovedFromRange:(NSRange)fromRange toLocation:(NSUInteger)toLocation;
-(void)objectsSwappedWithIndex:(NSUInteger)fromIndex andIndex:(NSUInteger)toIndex;
-(void)removeAllObjects;
-(void)removeLastObject;
-(void)removeObject:(id)object;
-(void)removeObject:(id)object inRange:(NSRange)r;
-(void)removeObjectAtIndex:(NSUInteger)index;
-(void)removeObjectIdenticalTo:(id)object;
-(void)removeObjectIdenticalTo:(id)object inRange:(NSRange)r;
-(void)removeObjectsAtIndexes:(NSIndexSet*)indexes;
-(void)removeObjectsInArray:(NSArray*)array;
-(void)removeObjectsInRange:(NSRange)r;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath;
-(void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet*)indexes forKeyPath:(NSString *)keyPath context:(void *)context;
-(void)replaceObjectAtIndex:(int)index withObject:(id)object;
-(void)replaceObjectsAtIndexes:(NSIndexSet*)indexes withObjects:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array;
-(void)replaceObjectsInRange:(NSRange)r withObjectsFromArray:(NSArray*)array range:(NSRange)arrayRange;
-(void)setArray:(NSArray*)array;
-(void)setValue:(id)value forKey:(NSString *)key;
-(void)sortUsingComparator:(NSComparator)cmptr;
-(void)sortUsingDescriptors:(NSArray*)sortDescriptors;
-(void)sortUsingFunction:(NSInteger (*)(id, id, void *))compare context:(void *)context;
-(void)sortUsingSelector:(SEL)selector;
-(void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(void)stateOK;
-(void)verifyMirrorArray;
-(void)willRemoveObject:(id)object;
-(void)willRemoveObject:(id)object fromIndex:(NSUInteger)index;

@end









@interface WeakMutableDictionaryMirrorTesterImpl : NSMutableDictionary<MutableDictionaryMirrorTester, WeakDictionary> {
    int __addingToMirrorDictionary;
    NSDictionary* __dictionary;
    NSMutableDictionary* __dictionaryObjectKeys;
    NSMutableDictionary* __mutableDictionary;
    int __removingFromMirrorDictionary;
    NSMutableString* v_errs;
}

@property  int __addingToMirrorDictionary;
@property (readonly) NSDictionary* __dictionary;
@property (retain) NSMutableDictionary* __dictionaryObjectKeys;
@property (readonly) NSMutableDictionary* __mutableDictionary;
@property  int __removingFromMirrorDictionary;
@property (readonly) NSArray* allKeys;
@property (readonly) NSArray* allValues;
@property (readonly) NSUInteger count;
@property (readonly) NSString* description;
@property (readonly) NSString* descriptionInStringsFileFormat;
@property (retain,nonatomic) NSMutableString* errs;
@property (readonly) NSDate* fileCreationDate;
@property (readonly) BOOL fileExtensionHidden;
@property (readonly) NSNumber* fileGroupOwnerAccountID;
@property (readonly) NSString* fileGroupOwnerAccountName;
@property (readonly) OSType fileHFSCreatorCode;
@property (readonly) OSType fileHFSTypeCode;
@property (readonly) BOOL fileIsAppendOnly;
@property (readonly) BOOL fileIsImmutable;
@property (readonly) NSDate* fileModificationDate;
@property (readonly) NSNumber* fileOwnerAccountID;
@property (readonly) NSString* fileOwnerAccountName;
@property (readonly) NSUInteger filePosixPermissions;
@property (readonly) ULL fileSize;
@property (readonly) NSUInteger fileSystemFileNumber;
@property (readonly) NSInteger fileSystemNumber;
@property (readonly) NSString* fileType;
@property (readonly) NSEnumerator* keyEnumerator;
@property (readonly) NSEnumerator* objectEnumerator;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionary;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionaryWithContentsOfFile:(NSString*)file;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionaryWithContentsOfURL:(NSURL*)url;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionaryWithDictionary:(NSDictionary*)dictionary;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionaryWithObject:(id)object forKey:(id<NSCopying>)key;
+(WeakMutableDictionaryMirrorTesterImpl*)dictionaryWithObjects:(id[])objects forKeys:(id<NSCopying>[])keys count:(NSUInteger)count;
+(id)dictionaryWithCapacity:(NSUInteger)numItems;
-(BOOL)fileExtensionHidden;
-(BOOL)fileIsAppendOnly;
-(BOOL)fileIsImmutable;
-(BOOL)isEqualToDictionary:(NSDictionary*)dictionary;
-(bool)passFail:(bool)pass format:(NSString*)format,...;
-(bool)shouldAddObject:(id)object forKey:(id<NSCopying>)key;
-(BOOL)writeToFile:(NSString *)path atomically:(BOOL)flag;
-(BOOL)writeToURL:(NSURL *)url atomically:(BOOL)flag;
-(id)copyWithZone:(NSZone*)zone;
-(id)objectForKey:(id<NSCopying>)key;
-(id)valueForKey:(NSString*)key;
-(WeakMutableDictionaryMirrorTesterImpl*)_startObjectOfClassWeakMutableDictionaryMirrorTesterImpl;
-(WeakMutableDictionaryMirrorTesterImpl*)init;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithCapacity:(NSUInteger)numItems;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithCoder:(NSCoder*)coder;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithContentsOfFile:(NSString*)file;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithContentsOfURL:(NSURL*)url;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithDictionary:(NSDictionary*)dictionary;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithDictionary:(NSDictionary*)dictionary copyItems:(BOOL)copy;
-(WeakMutableDictionaryMirrorTesterImpl*)initWithObjects:(const id[])objects forKeys:(const id<NSCopying>[])keys count:(NSUInteger)count;
-(NSArray*)allKeys;
-(NSArray*)allKeysForObject:(id)object;
-(NSArray*)allValues;
-(NSArray*)keysSortedByValueUsingComparator:(NSComparator)cmptr;
-(NSArray*)keysSortedByValueUsingSelector:(SEL)selector;
-(NSArray*)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator)cmptr;
-(NSArray*)objectsForKeys:(NSArray *)keys notFoundMarker:(id)anObject;
-(NSDate*)fileCreationDate;
-(NSDate*)fileModificationDate;
-(NSEnumerator*)keyEnumerator;
-(NSEnumerator*)objectEnumerator;
-(NSInteger)fileSystemNumber;
-(NSNumber*)fileGroupOwnerAccountID;
-(NSNumber*)fileOwnerAccountID;
-(NSSet *)keysOfEntriesPassingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSSet *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (^)(id key, id obj, BOOL *stop))predicate;
-(NSString *)descriptionWithLocale:(id)locale;
-(NSString *)descriptionWithLocale:(id)locale indent:(NSUInteger)level;
-(NSString*)description;
-(NSString*)descriptionInStringsFileFormat;
-(NSString*)fileGroupOwnerAccountName;
-(NSString*)fileOwnerAccountName;
-(NSString*)fileType;
-(NSUInteger)count;
-(NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id *)stackbuf count:(NSUInteger)len;
-(NSUInteger)filePosixPermissions;
-(NSUInteger)fileSystemFileNumber;
-(OSType)fileHFSCreatorCode;
-(OSType)fileHFSTypeCode;
-(ULL)fileSize;
-(void)add:(int)c toWillAddCountForObject:(id)object;
-(void)add:(int)c toWillRemoveCountForObject:(id)object;
-(void)addEntriesFromDictionary:(NSDictionary*)dictionary;
-(void)dealloc;
-(void)didAddObject:(id)object forKey:(id<NSCopying>)key;
-(void)didRemoveObject:(id)object forKey:(id<NSCopying>)key;
-(void)encodeWithCoder:(NSCoder*)coder;
-(void)enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (^)(id key, id obj, BOOL *stop))block;
-(void)getObjects:(id __unsafe_unretained [])objects andKeys:(id __unsafe_unretained [])keys;
-(void)removeAllObjects;
-(void)removeObjectForKey:(id<NSCopying>)key;
-(void)removeObjectsForKeys:(NSArray*)keys;
-(void)setDictionary:(NSDictionary*)dictionary;
-(void)setObject:(id)object forKey:(id<NSCopying>)key;
-(void)setValue:(id)object forKey:(NSString*)key;
-(void)stateOK;
-(void)verifyMirrorDictionary;
-(void)willRemoveObject:(id)object forKey:(id<NSCopying>)key;

@end


















