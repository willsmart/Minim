{"prog":"\"sound.wi\"\n\ntype AudioDeviceID\n\n<AudioUnit>\n    OSType componentSubType={return(kAudioUnitSubType_HALOutput);}\n    AudioDeviceID mic=[__Class__ getAudioDeviceCalled:\"Built-in Microphone\"];\n    AudioDeviceID speakers=[__Class__ getAudioDeviceCalled:\"Built-in Output\"];\n    -(init) {\n        [__Class__ getAudioDeviceCalled:nil];\n        {hi}\n    }\n    +(AudioDeviceID)getAudioDeviceCalled:(const char*)name {\n        AudioObjectPropertyAddress propertyAddress = { \n            kAudioHardwarePropertyDevices, \n            kAudioObjectPropertyScopeGlobal, \n            kAudioObjectPropertyElementMaster\n        };\n\n        UInt32 dataSize = 0;\n        OSStatus status = AudioObjectGetPropertyDataSize(kAudioObjectSystemObject, &propertyAddress, 0, NULL, &dataSize);\n        if(kAudioHardwareNoError != status) {\n            fprintf(stderr, \"AudioObjectGetPropertyDataSize (kAudioHardwarePropertyDevices) failed: %i\\n\", status);\n            return NULL;\n        }\n\n        UInt32 deviceCount = dataSize \/ sizeof(AudioDeviceID);\n\n        Array<AudioDeviceID> audioDevices;\n        audioDevices.setUpperBound(deviceCount-1);\n\n        status = AudioObjectGetPropertyData(kAudioObjectSystemObject, &propertyAddress, 0, NULL, &dataSize, audioDevices.a);\n        if(kAudioHardwareNoError != status) {\n            return NULL;\n        }\n\n        IterateArray(AudioDeviceID,dev,audioDevices,\n            propertyAddress.mScope = kAudioDevicePropertyScopeInput;\n            CFStringRef deviceUID = NULL;\n            dataSize = sizeof(deviceUID);\n            propertyAddress.mSelector = kAudioDevicePropertyDeviceUID;\n            status = AudioObjectGetPropertyData(dev, &propertyAddress, 0, NULL, &dataSize, &deviceUID);\n            if(kAudioHardwareNoError != status) {\n                continue;\n            }\n\n            \/\/ Query device name\n            CFStringRef deviceName = NULL;\n            dataSize = sizeof(deviceName);\n            propertyAddress.mSelector = kAudioDevicePropertyDeviceNameCFString;\n            status = AudioObjectGetPropertyData(dev, &propertyAddress, 0, NULL, &dataSize, &deviceName);\n            if(kAudioHardwareNoError != status) {\n                fprintf(stderr, \"AudioObjectGetPropertyData (kAudioDevicePropertyDeviceNameCFString) failed: %i\\n\", status);\n                continue;\n            }\n            const char *name2=[(NSString *)deviceName UTF8String];\n            if (!name) prnt(\"%s\\n\",name2);\n            else if (!strcasecmp(name,name2)) return(dev);\n        );\n        AudioDeviceID ret=0;\n        return(ret);\n    }\n\n\n\n","graph":{"name":"","children":[{"name":"sibs","colour":"green","children":[{"name":"body","colour":"green","children":[{"name":"type","size":330,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"AudioDeviceID","size":1073,"colour":"black"}]},{"name":"parent","colour":"green","children":[{"name":"body","colour":"green","children":[{"name":"<","size":82,"colour":"black"},{"name":"AudioUnit","size":743,"colour":"black"},{"name":">","size":82,"colour":"black"}]},{"name":"body[4]","colour":"green","children":[{"name":"OSType","size":495,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"componentSubType","size":1320,"colour":"black"},{"name":"=","size":82,"colour":"black"},{"name":"block[4]","colour":"green","children":[{"name":"return(kAudioUnitSubType_HALOutput);","size":2972,"colour":"black"}]}]},{"name":"body[4]","colour":"green","children":[{"name":"AudioDeviceID","size":1073,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"mic","size":247,"colour":"black"},{"name":"=","size":82,"colour":"black"},{"name":"[","size":82,"colour":"black"},{"name":"__Class__","size":743,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"getAudioDeviceCalled","size":1651,"colour":"black"},{"name":":","size":82,"colour":"black"},{"name":"Built-in Microphone","size":1568,"colour":"black"},{"name":"]","size":82,"colour":"black"},{"name":";","size":82,"colour":"black"}]},{"name":"body[4]","colour":"green","children":[{"name":"AudioDeviceID","size":1073,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"speakers","size":660,"colour":"black"},{"name":"=","size":82,"colour":"black"},{"name":"[","size":82,"colour":"black"},{"name":"__Class__","size":743,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"getAudioDeviceCalled","size":1651,"colour":"black"},{"name":":","size":82,"colour":"black"},{"name":"Built-in Output","size":1238,"colour":"black"},{"name":"]","size":82,"colour":"black"},{"name":";","size":82,"colour":"black"}]},{"name":"body[4]","colour":"green","children":[{"name":"-","size":82,"colour":"black"},{"name":"(","size":82,"colour":"black"},{"name":"init","size":330,"colour":"black"},{"name":")","size":82,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"block[11]","colour":"green","children":[{"name":"\n[__Class__ getAudioDeviceCalled:nil];\nh\n","colour":"orange","children":[{"name":"hi","size":165,"colour":"black"}]}]}]},{"name":"body[4]","colour":"green","children":[{"name":"+","size":82,"colour":"black"},{"name":"(","size":82,"colour":"black"},{"name":"AudioDeviceID","size":1073,"colour":"black"},{"name":")","size":82,"colour":"black"},{"name":"getAudioDeviceCalled","size":1651,"colour":"black"},{"name":":","size":82,"colour":"black"},{"name":"(","size":82,"colour":"black"},{"name":"const","size":412,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"char","size":330,"colour":"black"},{"name":"*","size":82,"colour":"black"},{"name":")","size":82,"colour":"black"},{"name":"name","size":330,"colour":"black"},{"name":"<space>","size":82,"colour":"black"},{"name":"block[355]","colour":"green","children":[{"name":"\nAudioObjectPropertyAddress propertyAddress = \n;\nUInt32 dataSize = 0;\nOSStatus status = AudioObjectGetPropertyDataSize(kAudioObjectSystemObject, &propertyAddress, 0, NULL, &dataSize);\nif(kAudioHardwareNoError != status) \n\nUInt32 deviceCount = dataSize \/ sizeof(AudioDeviceID);\nArray<AudioDeviceID> audioDevices;\naudioDevices.setUpperBound(deviceCount-1);\nstatus = AudioObjectGetPropertyData(kAudioObjectSystemObject, &propertyAddress, 0, NULL, &dataSize, audioDevices.a);\nif(kAudioHardwareNoError != status) \n\nIterateArray(AudioDeviceID,dev,audioDevices,\npropertyAddress.mScope = kAudioDevicePropertyScopeInput;\nCFStringRef deviceUID = NULL;\ndataSize = sizeof(deviceUID);\npropertyAddress.mSelector = kAudioDevicePropertyDeviceUID;\nstatus = AudioObjectGetPropertyData(dev, &propertyAddress, 0, NULL, &dataSize, &deviceUID);\nif(kAudioHardwareNoError != status) \n\nCFStringRef deviceName = NULL;\ndataSize = sizeof(deviceName);\npropertyAddress.mSelector = kAudioDevicePropertyDeviceNameCFString;\nstatus = AudioObjectGetPropertyData(dev, &propertyAddress, 0, NULL, &dataSize, &deviceName);\nif(kAudioHardwareNoError != status) \n\nconst char *name2=[(NSString *)deviceName UTF8String];\nif (!name) prnt(%s\\n,name2);\nelse if (!strcasecmp(name,name2)) return(dev);\n);\nAudioDeviceID ret=0;\nreturn(ret);\n","colour":"orange","children":[{"name":"\nkAudioHardwarePropertyDevices,\nkAudioObjectPropertyScopeGlobal,\nkAudioObjectPropertyElementMaster\n","size":8173,"colour":"black"},{"name":"\nfprintf(stderr, AudioObjectGetPropertyDataSize (kAudioHardwarePropertyDevices) failed: %i\\n, status);\nreturn NULL;\n","size":9576,"colour":"black"},{"name":"\nreturn NULL;\n","size":1155,"colour":"black"},{"name":"\ncontinue;\n","size":908,"colour":"black"},{"name":"\nfprintf(stderr, AudioObjectGetPropertyData (kAudioDevicePropertyDeviceNameCFString) failed: %i\\n, status);\ncontinue;\n","size":9741,"colour":"black"}]}]}]}]}]}]}}